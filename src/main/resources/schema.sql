-- Create the sequences used by Spring Batch
CREATE SEQUENCE BATCH_JOB_SEQ;
CREATE SEQUENCE BATCH_STEP_SEQ;
CREATE SEQUENCE BATCH_JOB_EXECUTION_SEQ;
CREATE SEQUENCE BATCH_JOB_EXECUTION_CONTEXT_SEQ;
CREATE SEQUENCE BATCH_STEP_EXECUTION_SEQ;
CREATE SEQUENCE BATCH_STEP_EXECUTION_CONTEXT_SEQ;
CREATE SEQUENCE BATCH_JOB_INSTANCE_SEQ;

-- Create tables used by Spring Batch
CREATE TABLE BATCH_JOB_INSTANCE (
    JOB_INSTANCE_ID BIGINT NOT NULL PRIMARY KEY,
    JOB_NAME VARCHAR(100) NOT NULL,
    JOB_KEY VARCHAR(100) NOT NULL,
    VERSION INT DEFAULT 0
);

CREATE TABLE BATCH_JOB_EXECUTION (
    JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
    JOB_INSTANCE_ID BIGINT NOT NULL,
    CREATE_TIME TIMESTAMP NOT NULL,
    START_TIME TIMESTAMP,
    END_TIME TIMESTAMP,
    STATUS VARCHAR(10) NOT NULL,
    EXIT_CODE VARCHAR(250),
    EXIT_MESSAGE VARCHAR(1000),
    LAST_UPDATED TIMESTAMP,
    VERSION INT,
    CONSTRAINT FK_JOB_INSTANCE FOREIGN KEY (JOB_INSTANCE_ID)
        REFERENCES BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION (
    STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
    JOB_EXECUTION_ID BIGINT NOT NULL,
    STEP_NAME VARCHAR(100) NOT NULL,
    START_TIME TIMESTAMP  DEFAULT CURRENT_TIMESTAMP,
    END_TIME TIMESTAMP,
    STATUS VARCHAR(10) NOT NULL,
    COMMIT_COUNT INT,
    READ_COUNT INT,
    FILTER_COUNT INT,
    WRITE_COUNT INT,
    READ_SKIP_COUNT INT,
    WRITE_SKIP_COUNT INT,
    PROCESS_SKIP_COUNT INT,
    ROLLBACK_COUNT INT,
    EXIT_CODE VARCHAR(250),
    EXIT_MESSAGE VARCHAR(250),
    LAST_UPDATED TIMESTAMP,
    VERSION INT,
    CONSTRAINT FK_JOB_EXECUTION FOREIGN KEY (JOB_EXECUTION_ID)
        REFERENCES BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
);

-- For H2 Database
CREATE TABLE BATCH_JOB_EXECUTION_PARAMS (
    JOB_EXECUTION_ID BIGINT NOT NULL,
    PARAMETER_NAME VARCHAR(100) NOT NULL,
    PARAMETER_TYPE VARCHAR(50) NOT NULL,
    PARAMETER_VALUE VARCHAR(250),
    IDENTIFYING BOOLEAN,
    PRIMARY KEY (JOB_EXECUTION_ID, PARAMETER_NAME)
);

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT (
    SHORT_CONTEXT VARCHAR(250),
    SERIALIZED_CONTEXT VARCHAR(10000),
    JOB_EXECUTION_ID BIGINT NOT NULL,
    PRIMARY KEY (JOB_EXECUTION_ID)
);

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT (
    SHORT_CONTEXT VARCHAR(250),
    SERIALIZED_CONTEXT VARCHAR(10000),
    STEP_EXECUTION_ID BIGINT NOT NULL,
    PRIMARY KEY (STEP_EXECUTION_ID)
);

ALTER TABLE BATCH_JOB_EXECUTION ALTER COLUMN EXIT_MESSAGE VARCHAR(4000);
ALTER TABLE BATCH_STEP_EXECUTION ADD COLUMN CREATE_TIME TIMESTAMP;
ALTER TABLE BATCH_STEP_EXECUTION ALTER COLUMN START_TIME SET DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE BATCH_STEP_EXECUTION
ALTER COLUMN START_TIME SET DEFAULT CURRENT_TIMESTAMP;
ALTER TABLE BATCH_STEP_EXECUTION_CONTEXT
ALTER COLUMN SHORT_CONTEXT VARCHAR(1000);




